% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ratio_estimation.R
\name{ratio_estimation}
\alias{ratio_estimation}
\title{Ratio estimator to compute proportion of votes allocated to each party}
\usage{
ratio_estimation(
  data_tbl,
  stratum,
  data_stratum,
  n_stratum,
  parties,
  std_errors = TRUE,
  B = 50,
  seed = NA,
  prop_obs = 1
)
}
\arguments{
\item{data_tbl}{\code{tibble}}

\item{stratum}{Unquoted variable indicating the stratum for each polling
station.}

\item{data_stratum}{Data frame with stratum variable (named exactly as in
\code{data}) and number of polling stations per strata.}

\item{n_stratum}{Unquoted variable indicating the number of polling stations
in each stratum.}

\item{parties}{Unquoted variables indicating the number of votes in each polling
station for each candidate.}

\item{std_errors}{Logical value indicating whether to compute standard errors
(using bootstrap), defaults to TRUE.}

\item{B}{Number of bootstrap replicates used to compute standard errors,
defaults to 50.}

\item{seed}{integer value used to set the state of the random number
generator (optional). It will only be used when computing standard errors.}

\item{prop_obs}{0 to 1 value indicating the proportion of the planned sample
used for estimation.}
}
\value{
A \code{tibble} including the ratio estimation for each party
and standard errors (if requested).
}
\description{
Compute ratio estimator for each candidate, standard errors are computed
with bootstrap resampling within each stratum and computing the standard
error of the samples. In addition, when estimating with incomplete data,
the parameter prop_obs can be used to
take into account biased observed in previous elections.
}
\details{
The bootstrap approach we use is not suitable
when the number of sampled polling stations within a strata is small.
Coverage might improve if confidence intervals are constructed with BCas or
t-tables.
}
\examples{
# count number of polling stations per stratum
library(dplyr)
stratum_sizes <- conteo_2018 \%>\%
    dplyr::group_by(ID_DISTRITO) \%>\%
    dplyr::summarise(n_stratum = n())
# stratified random sample (size 6\%), sample size proportional to strata size
sample <- select_sample_prop(conteo_2018, stratum = ID_DISTRITO, 0.06)
ratio_estimation(sample, stratum = ID_DISTRITO,
  data_stratum = stratum_sizes, n_stratum = n_stratum, any_of(c("AMLO", "JAMK")))
ratio_estimation(sample, stratum = ID_DISTRITO,
  data_stratum = stratum_sizes, n_stratum = n_stratum, any_of(c("AMLO", "JAMK")),
  prop_obs = 0.8)
}
